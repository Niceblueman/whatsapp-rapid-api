/*
WhatsApp API

API for managing WhatsApp devices and interactions

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RegisterDevice200Response struct for RegisterDevice200Response
type RegisterDevice200Response struct {
	// Base64-encoded QR code image
	QrCode *string `json:"qrCode,omitempty"`
	// Refresh code for getting a new QR code
	RefreshCode *string `json:"refreshCode,omitempty"`
}

// NewRegisterDevice200Response instantiates a new RegisterDevice200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterDevice200Response() *RegisterDevice200Response {
	this := RegisterDevice200Response{}
	return &this
}

// NewRegisterDevice200ResponseWithDefaults instantiates a new RegisterDevice200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterDevice200ResponseWithDefaults() *RegisterDevice200Response {
	this := RegisterDevice200Response{}
	return &this
}

// GetQrCode returns the QrCode field value if set, zero value otherwise.
func (o *RegisterDevice200Response) GetQrCode() string {
	if o == nil || o.QrCode == nil {
		var ret string
		return ret
	}
	return *o.QrCode
}

// GetQrCodeOk returns a tuple with the QrCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterDevice200Response) GetQrCodeOk() (*string, bool) {
	if o == nil || o.QrCode == nil {
		return nil, false
	}
	return o.QrCode, true
}

// HasQrCode returns a boolean if a field has been set.
func (o *RegisterDevice200Response) HasQrCode() bool {
	if o != nil && o.QrCode != nil {
		return true
	}

	return false
}

// SetQrCode gets a reference to the given string and assigns it to the QrCode field.
func (o *RegisterDevice200Response) SetQrCode(v string) {
	o.QrCode = &v
}

// GetRefreshCode returns the RefreshCode field value if set, zero value otherwise.
func (o *RegisterDevice200Response) GetRefreshCode() string {
	if o == nil || o.RefreshCode == nil {
		var ret string
		return ret
	}
	return *o.RefreshCode
}

// GetRefreshCodeOk returns a tuple with the RefreshCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterDevice200Response) GetRefreshCodeOk() (*string, bool) {
	if o == nil || o.RefreshCode == nil {
		return nil, false
	}
	return o.RefreshCode, true
}

// HasRefreshCode returns a boolean if a field has been set.
func (o *RegisterDevice200Response) HasRefreshCode() bool {
	if o != nil && o.RefreshCode != nil {
		return true
	}

	return false
}

// SetRefreshCode gets a reference to the given string and assigns it to the RefreshCode field.
func (o *RegisterDevice200Response) SetRefreshCode(v string) {
	o.RefreshCode = &v
}

func (o RegisterDevice200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.QrCode != nil {
		toSerialize["qrCode"] = o.QrCode
	}
	if o.RefreshCode != nil {
		toSerialize["refreshCode"] = o.RefreshCode
	}
	return json.Marshal(toSerialize)
}

type NullableRegisterDevice200Response struct {
	value *RegisterDevice200Response
	isSet bool
}

func (v NullableRegisterDevice200Response) Get() *RegisterDevice200Response {
	return v.value
}

func (v *NullableRegisterDevice200Response) Set(val *RegisterDevice200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterDevice200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterDevice200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterDevice200Response(val *RegisterDevice200Response) *NullableRegisterDevice200Response {
	return &NullableRegisterDevice200Response{value: val, isSet: true}
}

func (v NullableRegisterDevice200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterDevice200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


