/*
WhatsApp API

API for managing WhatsApp devices and interactions

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateProfileRequest struct for UpdateProfileRequest
type UpdateProfileRequest struct {
	// Updated profile name for the device
	ProfileName *string `json:"profileName,omitempty"`
	// Valid image URL for the device's avatar
	AvatarUrl *string `json:"avatarUrl,omitempty"`
}

// NewUpdateProfileRequest instantiates a new UpdateProfileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProfileRequest() *UpdateProfileRequest {
	this := UpdateProfileRequest{}
	return &this
}

// NewUpdateProfileRequestWithDefaults instantiates a new UpdateProfileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProfileRequestWithDefaults() *UpdateProfileRequest {
	this := UpdateProfileRequest{}
	return &this
}

// GetProfileName returns the ProfileName field value if set, zero value otherwise.
func (o *UpdateProfileRequest) GetProfileName() string {
	if o == nil || o.ProfileName == nil {
		var ret string
		return ret
	}
	return *o.ProfileName
}

// GetProfileNameOk returns a tuple with the ProfileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProfileRequest) GetProfileNameOk() (*string, bool) {
	if o == nil || o.ProfileName == nil {
		return nil, false
	}
	return o.ProfileName, true
}

// HasProfileName returns a boolean if a field has been set.
func (o *UpdateProfileRequest) HasProfileName() bool {
	if o != nil && o.ProfileName != nil {
		return true
	}

	return false
}

// SetProfileName gets a reference to the given string and assigns it to the ProfileName field.
func (o *UpdateProfileRequest) SetProfileName(v string) {
	o.ProfileName = &v
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise.
func (o *UpdateProfileRequest) GetAvatarUrl() string {
	if o == nil || o.AvatarUrl == nil {
		var ret string
		return ret
	}
	return *o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProfileRequest) GetAvatarUrlOk() (*string, bool) {
	if o == nil || o.AvatarUrl == nil {
		return nil, false
	}
	return o.AvatarUrl, true
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *UpdateProfileRequest) HasAvatarUrl() bool {
	if o != nil && o.AvatarUrl != nil {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given string and assigns it to the AvatarUrl field.
func (o *UpdateProfileRequest) SetAvatarUrl(v string) {
	o.AvatarUrl = &v
}

func (o UpdateProfileRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProfileName != nil {
		toSerialize["profileName"] = o.ProfileName
	}
	if o.AvatarUrl != nil {
		toSerialize["avatarUrl"] = o.AvatarUrl
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateProfileRequest struct {
	value *UpdateProfileRequest
	isSet bool
}

func (v NullableUpdateProfileRequest) Get() *UpdateProfileRequest {
	return v.value
}

func (v *NullableUpdateProfileRequest) Set(val *UpdateProfileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProfileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProfileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProfileRequest(val *UpdateProfileRequest) *NullableUpdateProfileRequest {
	return &NullableUpdateProfileRequest{value: val, isSet: true}
}

func (v NullableUpdateProfileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProfileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


