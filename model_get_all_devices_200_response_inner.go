/*
WhatsApp API

API for managing WhatsApp devices and interactions

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetAllDevices200ResponseInner struct for GetAllDevices200ResponseInner
type GetAllDevices200ResponseInner struct {
	// ID of the registered device
	DeviceId *string `json:"deviceId,omitempty"`
	// Name of the device
	DeviceName *string `json:"deviceName,omitempty"`
}

// NewGetAllDevices200ResponseInner instantiates a new GetAllDevices200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAllDevices200ResponseInner() *GetAllDevices200ResponseInner {
	this := GetAllDevices200ResponseInner{}
	return &this
}

// NewGetAllDevices200ResponseInnerWithDefaults instantiates a new GetAllDevices200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAllDevices200ResponseInnerWithDefaults() *GetAllDevices200ResponseInner {
	this := GetAllDevices200ResponseInner{}
	return &this
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *GetAllDevices200ResponseInner) GetDeviceId() string {
	if o == nil || o.DeviceId == nil {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllDevices200ResponseInner) GetDeviceIdOk() (*string, bool) {
	if o == nil || o.DeviceId == nil {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *GetAllDevices200ResponseInner) HasDeviceId() bool {
	if o != nil && o.DeviceId != nil {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *GetAllDevices200ResponseInner) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetDeviceName returns the DeviceName field value if set, zero value otherwise.
func (o *GetAllDevices200ResponseInner) GetDeviceName() string {
	if o == nil || o.DeviceName == nil {
		var ret string
		return ret
	}
	return *o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllDevices200ResponseInner) GetDeviceNameOk() (*string, bool) {
	if o == nil || o.DeviceName == nil {
		return nil, false
	}
	return o.DeviceName, true
}

// HasDeviceName returns a boolean if a field has been set.
func (o *GetAllDevices200ResponseInner) HasDeviceName() bool {
	if o != nil && o.DeviceName != nil {
		return true
	}

	return false
}

// SetDeviceName gets a reference to the given string and assigns it to the DeviceName field.
func (o *GetAllDevices200ResponseInner) SetDeviceName(v string) {
	o.DeviceName = &v
}

func (o GetAllDevices200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceId != nil {
		toSerialize["deviceId"] = o.DeviceId
	}
	if o.DeviceName != nil {
		toSerialize["deviceName"] = o.DeviceName
	}
	return json.Marshal(toSerialize)
}

type NullableGetAllDevices200ResponseInner struct {
	value *GetAllDevices200ResponseInner
	isSet bool
}

func (v NullableGetAllDevices200ResponseInner) Get() *GetAllDevices200ResponseInner {
	return v.value
}

func (v *NullableGetAllDevices200ResponseInner) Set(val *GetAllDevices200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAllDevices200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAllDevices200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAllDevices200ResponseInner(val *GetAllDevices200ResponseInner) *NullableGetAllDevices200ResponseInner {
	return &NullableGetAllDevices200ResponseInner{value: val, isSet: true}
}

func (v NullableGetAllDevices200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAllDevices200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


